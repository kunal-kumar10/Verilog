$date
	Fri Dec 30 15:50:04 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module add_test $end
$var wire 1 ! zero $end
$var wire 1 " sign $end
$var wire 16 # s [15:0] $end
$var wire 1 $ parity $end
$var wire 1 % overflow $end
$var wire 1 & carry $end
$var reg 16 ' a [15:0] $end
$var reg 16 ( b [15:0] $end
$scope module DUT $end
$var wire 16 ) a [15:0] $end
$var wire 16 * b [15:0] $end
$var wire 1 ! zero $end
$var wire 16 + sum [15:0] $end
$var wire 1 " sign $end
$var wire 1 $ parity $end
$var wire 1 % overflow $end
$var wire 1 & carry $end
$var wire 4 , c [3:0] $end
$scope module M0 $end
$var wire 4 - a [3:0] $end
$var wire 4 . b [3:0] $end
$var wire 1 / cin $end
$var wire 4 0 s [3:0] $end
$var wire 1 1 cout $end
$var wire 4 2 c [3:0] $end
$scope module f0 $end
$var wire 1 3 a $end
$var wire 1 4 b $end
$var wire 1 / cin $end
$var wire 1 5 cout $end
$var wire 1 6 s $end
$var wire 1 7 t1 $end
$var wire 1 8 t2 $end
$var wire 1 9 t3 $end
$upscope $end
$scope module f1 $end
$var wire 1 : a $end
$var wire 1 ; b $end
$var wire 1 < cin $end
$var wire 1 = cout $end
$var wire 1 > s $end
$var wire 1 ? t1 $end
$var wire 1 @ t2 $end
$var wire 1 A t3 $end
$upscope $end
$scope module f2 $end
$var wire 1 B a $end
$var wire 1 C b $end
$var wire 1 D cin $end
$var wire 1 E cout $end
$var wire 1 F s $end
$var wire 1 G t1 $end
$var wire 1 H t2 $end
$var wire 1 I t3 $end
$upscope $end
$scope module f3 $end
$var wire 1 J a $end
$var wire 1 K b $end
$var wire 1 L cin $end
$var wire 1 M cout $end
$var wire 1 N s $end
$var wire 1 O t1 $end
$var wire 1 P t2 $end
$var wire 1 Q t3 $end
$upscope $end
$upscope $end
$scope module M1 $end
$var wire 4 R a [3:0] $end
$var wire 4 S b [3:0] $end
$var wire 1 T cin $end
$var wire 4 U s [3:0] $end
$var wire 1 V cout $end
$var wire 4 W c [3:0] $end
$scope module f0 $end
$var wire 1 X a $end
$var wire 1 Y b $end
$var wire 1 T cin $end
$var wire 1 Z cout $end
$var wire 1 [ s $end
$var wire 1 \ t1 $end
$var wire 1 ] t2 $end
$var wire 1 ^ t3 $end
$upscope $end
$scope module f1 $end
$var wire 1 _ a $end
$var wire 1 ` b $end
$var wire 1 a cin $end
$var wire 1 b cout $end
$var wire 1 c s $end
$var wire 1 d t1 $end
$var wire 1 e t2 $end
$var wire 1 f t3 $end
$upscope $end
$scope module f2 $end
$var wire 1 g a $end
$var wire 1 h b $end
$var wire 1 i cin $end
$var wire 1 j cout $end
$var wire 1 k s $end
$var wire 1 l t1 $end
$var wire 1 m t2 $end
$var wire 1 n t3 $end
$upscope $end
$scope module f3 $end
$var wire 1 o a $end
$var wire 1 p b $end
$var wire 1 q cin $end
$var wire 1 r cout $end
$var wire 1 s s $end
$var wire 1 t t1 $end
$var wire 1 u t2 $end
$var wire 1 v t3 $end
$upscope $end
$upscope $end
$scope module M2 $end
$var wire 4 w a [3:0] $end
$var wire 4 x b [3:0] $end
$var wire 1 y cin $end
$var wire 4 z s [3:0] $end
$var wire 1 { cout $end
$var wire 4 | c [3:0] $end
$scope module f0 $end
$var wire 1 } a $end
$var wire 1 ~ b $end
$var wire 1 y cin $end
$var wire 1 !" cout $end
$var wire 1 "" s $end
$var wire 1 #" t1 $end
$var wire 1 $" t2 $end
$var wire 1 %" t3 $end
$upscope $end
$scope module f1 $end
$var wire 1 &" a $end
$var wire 1 '" b $end
$var wire 1 (" cin $end
$var wire 1 )" cout $end
$var wire 1 *" s $end
$var wire 1 +" t1 $end
$var wire 1 ," t2 $end
$var wire 1 -" t3 $end
$upscope $end
$scope module f2 $end
$var wire 1 ." a $end
$var wire 1 /" b $end
$var wire 1 0" cin $end
$var wire 1 1" cout $end
$var wire 1 2" s $end
$var wire 1 3" t1 $end
$var wire 1 4" t2 $end
$var wire 1 5" t3 $end
$upscope $end
$scope module f3 $end
$var wire 1 6" a $end
$var wire 1 7" b $end
$var wire 1 8" cin $end
$var wire 1 9" cout $end
$var wire 1 :" s $end
$var wire 1 ;" t1 $end
$var wire 1 <" t2 $end
$var wire 1 =" t3 $end
$upscope $end
$upscope $end
$scope module M3 $end
$var wire 4 >" a [3:0] $end
$var wire 4 ?" b [3:0] $end
$var wire 1 @" cin $end
$var wire 4 A" s [3:0] $end
$var wire 1 B" cout $end
$var wire 4 C" c [3:0] $end
$scope module f0 $end
$var wire 1 D" a $end
$var wire 1 E" b $end
$var wire 1 @" cin $end
$var wire 1 F" cout $end
$var wire 1 G" s $end
$var wire 1 H" t1 $end
$var wire 1 I" t2 $end
$var wire 1 J" t3 $end
$upscope $end
$scope module f1 $end
$var wire 1 K" a $end
$var wire 1 L" b $end
$var wire 1 M" cin $end
$var wire 1 N" cout $end
$var wire 1 O" s $end
$var wire 1 P" t1 $end
$var wire 1 Q" t2 $end
$var wire 1 R" t3 $end
$upscope $end
$scope module f2 $end
$var wire 1 S" a $end
$var wire 1 T" b $end
$var wire 1 U" cin $end
$var wire 1 V" cout $end
$var wire 1 W" s $end
$var wire 1 X" t1 $end
$var wire 1 Y" t2 $end
$var wire 1 Z" t3 $end
$upscope $end
$scope module f3 $end
$var wire 1 [" a $end
$var wire 1 \" b $end
$var wire 1 ]" cin $end
$var wire 1 ^" cout $end
$var wire 1 _" s $end
$var wire 1 `" t1 $end
$var wire 1 a" t2 $end
$var wire 1 b" t3 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
xb"
xa"
x`"
x_"
x^"
x]"
x\"
x["
xZ"
xY"
xX"
xW"
xV"
xU"
xT"
xS"
xR"
xQ"
xP"
xO"
xN"
xM"
xL"
xK"
xJ"
xI"
xH"
xG"
xF"
xE"
xD"
bx C"
xB"
bx A"
x@"
bx ?"
bx >"
x="
x<"
x;"
x:"
x9"
x8"
x7"
x6"
x5"
x4"
x3"
x2"
x1"
x0"
x/"
x."
x-"
x,"
x+"
x*"
x)"
x("
x'"
x&"
x%"
x$"
x#"
x""
x!"
x~
x}
bx |
x{
bx z
xy
bx x
bx w
xv
xu
xt
xs
xr
xq
xp
xo
xn
xm
xl
xk
xj
xi
xh
xg
xf
xe
xd
xc
xb
xa
x`
x_
x^
x]
x\
x[
xZ
xY
xX
bx W
xV
bx U
xT
bx S
bx R
xQ
xP
xO
xN
xM
xL
xK
xJ
xI
xH
xG
xF
xE
xD
xC
xB
xA
x@
x?
x>
x=
x<
x;
x:
09
08
x7
x6
x5
x4
x3
bx 2
x1
bx 0
0/
bx .
bx -
bx ,
bx +
bx *
bx )
bx (
bx '
x&
x%
x$
bx #
x"
x!
$end
#5000
1&
1B"
0"
1^"
0$
1!
0_"
1a"
1]"
1V"
0W"
1Y"
1U"
1N"
0O"
1Q"
1M"
b1111 C"
1F"
b0 A"
0G"
1I"
1@"
1{
19"
0:"
1<"
18"
11"
02"
14"
10"
1)"
0*"
1,"
1("
b1111 |
1!"
b0 z
0""
1$"
1y
1V
1r
0s
1u
1q
1j
0k
1m
1i
1b
0c
1e
1a
b1111 W
1Z
b0 U
0[
1]
1T
b1111 ,
11
1M
0N
1P
1L
1E
0F
1H
1D
1=
0>
1@
1<
b1111 2
15
0A
0I
0Q
0^
0f
0n
0v
0%"
0-"
05"
0="
0J"
0R"
0Z"
0b"
0%
b0 #
b0 +
b0 0
06
17
0?
0G
0O
0\
0d
0l
0t
0#"
0+"
03"
0;"
0H"
0P"
0X"
0`"
14
0;
0C
0K
0Y
0`
0h
0p
0~
0'"
0/"
07"
0E"
0L"
0T"
0\"
13
1:
1B
1J
1X
1_
1g
1o
1}
1&"
1."
16"
1D"
1K"
1S"
1["
b1 .
b0 S
b0 x
b0 ?"
b1111 -
b1111 R
b1111 w
b1111 >"
b1 (
b1 *
b1111111111111111 '
b1111111111111111 )
#10000
0Q"
0M"
0D
00"
0F"
0=
0]
0)"
1G"
0I"
1>
0@
0T
1*"
0@"
1%
0&
0<
0L
01
0("
08"
0{
b10 ,
0B"
05
0E
b0 2
0M
0!"
01"
b0 |
09"
1"
b110 C"
0^"
0[
1\
0^
1k
1l
1n
b1100 U
1s
1t
1v
0-"
0O"
1P"
0R"
1Z"
07
0F
0H
b10 0
0N
0P
1""
0$"
0,"
02"
04"
b11 z
0:"
0<"
0Y"
1$
0!
b1001001111000010 #
b1001001111000010 +
b1001 A"
1_"
0a"
04
1Y
1h
1p
1'"
1L"
1T"
03
0B
0J
0}
0&"
0."
06"
0S"
0["
b0 .
b1101 S
b10 x
b110 ?"
b10 -
b0 w
b11 >"
b110001011010000 (
b110001011010000 *
b11000011110010 '
b11000011110010 )
#15000
1:"
1<"
1="
18"
11"
1O"
1Q"
1R"
14"
1M"
10"
1F"
b1101 U
1[
1]
1^
1)"
0G"
1I"
1F
1H
1I
0&
1N
1P
1Q
1T
0*"
1-"
1@"
1D
0]"
0B"
1L
11
1("
b111 ,
1{
1=
0V"
1"
b11 C"
0^"
1E
b1110 2
1M
1!"
b1111 |
19"
b1100 0
0>
1?
1%"
1W"
0Z"
b1110 A"
1_"
0b"
0%
1G
1O
1#"
1$"
0$
b1110100111011100 #
b1110100111011100 +
b1001 z
02"
1;"
1;
1C
1K
1~
17"
0T"
1\"
1B
1J
1}
1."
16"
b1110 .
b1011 x
b1010 ?"
b1110 -
b1101 w
b1010101111011110 (
b1010101111011110 *
b11110111111110 '
b11110111111110 )
#20000
0:"
08"
01"
12"
04"
00"
0)"
1*"
0-"
0("
0!"
0$"
0y
0V
0r
0u
0q
0j
0n
0i
0U"
0b
0N"
1c
0e
0Q"
0N
0&
0a
0M"
0L
0B"
b0 W
0Z
0F"
0E
1"
0^"
0^
1G"
0I"
0I
1_"
0b"
0T
0@"
0D
0]"
01
b0 ,
0{
0=
b0 C"
0V"
b0 2
0M
b0 |
09"
1>
0?
0Q
1s
0t
0v
b111 z
1""
0#"
0%"
0="
1O"
0P"
0R"
b1111 A"
1W"
0Z"
b110 0
1F
0G
0H
0O
0P
1[
0\
0]
1$
b1111011111110110 #
b1111011111110110 +
b1111 U
1k
0l
0m
0;"
0<"
0;
0K
0p
0~
07"
0L"
1T"
0B
0J
0X
0g
06"
b100 .
b101 S
b10 x
b1100 ?"
b10 -
b1010 R
b101 w
b1100001001010100 (
b1100001001010100 *
b11010110100010 '
b11010110100010 )
